{"ast":null,"code":"/*import React , {useState}from 'react';\nimport './index.css';\n function App ()\n {\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  let alltasks = JSON.parse(window.localStorage.getItem('tasks')||\"[]\")\n  const savedata = () => {\n      let newtask = {\n    id: Math.random(),\n    task : task,\n    assignee : assignee ,\n    done : false\n  }\n  alltasks.push(newtask)\n  window.localStorage.setItem('tasks',JSON.stringify(alltasks))\n  // clear input box\n  settask(\"\");\n  setassignee(\"\");\n    };\n    const [searchText, setSearchText] = useState(\"\");\n    \n    const Readtasks = alltasks.filter(\n        ({ task, assignee }) =>\n          task.toLowerCase().includes(searchText.toLowerCase()) ||\n          assignee.toLowerCase().includes(searchText.toLowerCase())\n      );\n      const deleteTodo = id => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n       alltasks = alltasks.filter((todo) => todo.id !== id);\n       window.localStorage.setItem('tasks',JSON.stringify(alltasks));\n    }\n  };\n  const doneTodo = (e,id )=> {\n  if (e.currentTarget.style.backgroundColor) {\n    e.currentTarget.style.backgroundColor = null;\n    e.currentTarget.style.color = null;\n    alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: false};}return obj;});\n    window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  } else {\n    e.currentTarget.style.backgroundColor = 'green';\n    e.currentTarget.style.color = 'white';\n    alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: true};}return obj;});\n   window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  }\n  };\n  \n  let ListItems = Readtasks.map((todo) => {\n    return(\n        <div key ={todo.id} >\n          <p>{todo.task}</p>\n          <button className=\"done btn_class\"  onClick={(e) => doneTodo(e,todo.id)}>Done </button>\n          <button className='delete' onClick={() => deleteTodo(todo.id)}>Delete</button>\n          <p>{todo.assignee}</p>\n        </div>\n    )\n });\n    \n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"task name\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"assignee\" />\n            <button className=\"b_add\" onClick={savedata} >Add Task</button>\n                </label>\n            </form>\n          <hr/>\n          <div className=\"search\">\n        <input\n          type=\"text\"\n          value={searchText}\n          id=\"search\" placeholder=\" Search\"\n          onChange={({ target }) => setSearchText(target.value)}\n        />\n          <div className=\"my-tasks\">\n          {ListItems}\n          </div></div>\n          <footer className=\"counts\" id=\"counts\">\n        <p id=\"TD_count\">To-Do:{alltasks.length}</p>\n        <p id=\"D_count\">Done:{alltasks.filter(value => value.done === true).length}</p>\n        </footer>\n        </div> \n      );}\nexport default App;*/","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/React1/to-do/src/App.js"],"sourcesContent":["/*import React , {useState}from 'react';\nimport './index.css';\n function App ()\n {\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  let alltasks = JSON.parse(window.localStorage.getItem('tasks')||\"[]\")\n  const savedata = () => {\n      let newtask = {\n    id: Math.random(),\n    task : task,\n    assignee : assignee ,\n    done : false\n  }\n  alltasks.push(newtask)\n  window.localStorage.setItem('tasks',JSON.stringify(alltasks))\n  // clear input box\n  settask(\"\");\n  setassignee(\"\");\n    };\n    const [searchText, setSearchText] = useState(\"\");\n    \n    const Readtasks = alltasks.filter(\n        ({ task, assignee }) =>\n          task.toLowerCase().includes(searchText.toLowerCase()) ||\n          assignee.toLowerCase().includes(searchText.toLowerCase())\n      );\n      const deleteTodo = id => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n       alltasks = alltasks.filter((todo) => todo.id !== id);\n       window.localStorage.setItem('tasks',JSON.stringify(alltasks));\n    }\n  };\n  const doneTodo = (e,id )=> {\n  if (e.currentTarget.style.backgroundColor) {\n    e.currentTarget.style.backgroundColor = null;\n    e.currentTarget.style.color = null;\n    alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: false};}return obj;});\n    window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  } else {\n    e.currentTarget.style.backgroundColor = 'green';\n    e.currentTarget.style.color = 'white';\n    alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: true};}return obj;});\n   window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  }\n  };\n  \n  let ListItems = Readtasks.map((todo) => {\n    return(\n        <div key ={todo.id} >\n          <p>{todo.task}</p>\n          <button className=\"done btn_class\"  onClick={(e) => doneTodo(e,todo.id)}>Done </button>\n          <button className='delete' onClick={() => deleteTodo(todo.id)}>Delete</button>\n          <p>{todo.assignee}</p>\n        </div>\n    )\n });\n    \n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"task name\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"assignee\" />\n            <button className=\"b_add\" onClick={savedata} >Add Task</button>\n                </label>\n            </form>\n          <hr/>\n          <div className=\"search\">\n        <input\n          type=\"text\"\n          value={searchText}\n          id=\"search\" placeholder=\" Search\"\n          onChange={({ target }) => setSearchText(target.value)}\n        />\n          <div className=\"my-tasks\">\n          {ListItems}\n          </div></div>\n          <footer className=\"counts\" id=\"counts\">\n        <p id=\"TD_count\">To-Do:{alltasks.length}</p>\n        <p id=\"D_count\">Done:{alltasks.filter(value => value.done === true).length}</p>\n        </footer>\n        </div> \n      );}\nexport default App;*/\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}