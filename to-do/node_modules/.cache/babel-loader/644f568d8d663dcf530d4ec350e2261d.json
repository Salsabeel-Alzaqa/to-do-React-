{"ast":null,"code":"/*import React , {useState , useEffect}from 'react';\nimport './index.css';\n function App ()\n {\n  const [alltasks, setalltasks] = useState([]);\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  const savedata = () => {\n      let newtask = {\n    id: Math.random(),\n    task : task,\n    assignee : assignee ,\n    done : false\n  }\n  setalltasks([...alltasks, newtask]);\n  settask(\"\");\n  setassignee(\"\");\n    };\n  \n  \n   \n////search\n    const [searchText, setSearchText] = useState(\"\");\n    const Readtasks = alltasks.filter(\n        ({ task, assignee }) =>\n          task.toLowerCase().includes(searchText.toLowerCase()) ||\n          assignee.toLowerCase().includes(searchText.toLowerCase())\n      );\n      const deleteTodo = id => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n       let newtasks = alltasks.filter((todo) => todo.id !== id);\n       setalltasks([...newtasks]);\n    }\n  };\n  const doneTodo = (e,id )=> {\n  if (e.currentTarget.style.backgroundColor) {\n    e.currentTarget.style.backgroundColor = null;\n    e.currentTarget.style.color = null;\n    //alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: false};}return obj;});\n    //window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  } else {\n    e.currentTarget.style.backgroundColor = 'green';\n    e.currentTarget.style.color = 'white';\n    //alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: true};}return obj;});\n   //window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  }\n  };\n  \n  let ListItems = Readtasks.map((todo) => {\n    return(\n        <div key ={todo.id} >\n          <p>Task Name: {todo.task}</p>\n          <button className=\"done btn_class\"  onClick={(e) => doneTodo(e,todo.id)}>Done </button>\n          <button className='delete' onClick={() => deleteTodo(todo.id)}>Delete</button>\n          <p>Assignee: {todo.assignee}</p>\n        </div>\n    )\n });\n    \n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"task name\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"assignee\" />\n            <button className=\"b_add\" onClick={savedata} >Add Task</button>\n                </label>\n            </form>\n          <hr/>\n          <div className=\"search\">\n        <input\n          type=\"text\"\n          value={searchText}\n          id=\"search\" placeholder=\" Search\"\n          onChange={({ target }) => setSearchText(target.value)}\n        />\n          <div className=\"my-tasks\">\n          {ListItems}\n          </div></div>\n          <footer className=\"counts\" id=\"counts\">\n        <p id=\"TD_count\">To-Do:{alltasks.length}</p>\n        <p id=\"D_count\">Done:{alltasks.filter(value => value.done === true).length}</p>\n        </footer>\n        </div> \n      );}\nexport default App;\n/*import React, { useState, useEffect } from \"react\";\n\nexport default function App() {\n  const[assignee,setAssignee] = useState('')\n  const [task, setTask] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  useEffect(()=>{\n      if(localStorage.getItem(\"todos\")){\n          const storedList = JSON.parse(localStorage.getItem(\"todos\"));\n          setTodos(storedList);\n      }\n  },[])\n\n  const addTask = (e) => {\n    if (task && assignee ) {\n      const newTask ={\n        id: Math.random() , \n        task : task,\n        assignee:assignee , \n        done:false };\n      setTodos([...todos, newTask]);\n      localStorage.setItem(\"todos\", JSON.stringify([...todos, newTask]));\n      setTask(\"\");\n      setAssignee(\"\");\n    }\n  };\n\n  const handleDelete = (task)=>{\n      const deleted = todos.filter((t)=>t.id !== task.id);\n      setTodos(deleted);\n      localStorage.setItem(\"todos\", JSON.stringify(deleted))\n  }\n\n  /*const handleClear=()=>{\n      setTasks([]);\n      localStorage.removeItem(\"localTasks\");\n  }\n  return (\n    <div className=\"container row\">\n      <h1 className=\"mt-3 text-white\">To-Do App</h1>\n      <div className=\"col-8\">\n        <input\n          name=\"task\"\n          type=\"text\"\n          value={task}\n          placeholder=\"Write your task...\"\n          className=\"form-control\"\n          onChange={(e) => setTask(e.target.value)}\n        />\n      </div>\n      <div className=\"col-4\">\n        <button\n          className=\"btn btn-primary form-control material-icons\"\n          onClick={addTask}\n        >\n          add\n        </button>\n      </div>\n      <div className=\"badge\">\n        You have\n        {!tasks.length\n          ? \" no tasks\"\n          : tasks.length === 1\n          ? \" 1 task\"\n          : tasks.length > 1\n          ? ` ${tasks.length} tasks`\n          : null}\n      </div>\n      {tasks.map((task) => (\n        <React.Fragment key={task.id}>\n            <div className=\"col-11\">\n                <span className = \"form-control bg-white btn mt-2\"\n                style={{textAlign: \"left\", fontWeight: \"bold\"}}>\n                    {task.title}\n                </span>\n            </div>\n\n            <div className=\"col-1\">\n                <button\n                className =\" mt-2 btn btn-warning material-icons\"\n                onClick ={()=> handleDelete(task)}\n                >delete</button>\n            </div>\n        </React.Fragment>\n      ))}\n      {!tasks.length ? null:(\n          <div>\n              <button className= \"btn btn-secondary  mt-4 mb-4\" onClick={()=>handleClear()}>\n                  Clear\n              </button>\n          </div>\n      )}\n    </div>\n  );\n}*/","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/React1/to-do/src/App.js"],"sourcesContent":["/*import React , {useState , useEffect}from 'react';\nimport './index.css';\n function App ()\n {\n  const [alltasks, setalltasks] = useState([]);\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  const savedata = () => {\n      let newtask = {\n    id: Math.random(),\n    task : task,\n    assignee : assignee ,\n    done : false\n  }\n  setalltasks([...alltasks, newtask]);\n  settask(\"\");\n  setassignee(\"\");\n    };\n  \n  \n   \n////search\n    const [searchText, setSearchText] = useState(\"\");\n    const Readtasks = alltasks.filter(\n        ({ task, assignee }) =>\n          task.toLowerCase().includes(searchText.toLowerCase()) ||\n          assignee.toLowerCase().includes(searchText.toLowerCase())\n      );\n      const deleteTodo = id => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n       let newtasks = alltasks.filter((todo) => todo.id !== id);\n       setalltasks([...newtasks]);\n    }\n  };\n  const doneTodo = (e,id )=> {\n  if (e.currentTarget.style.backgroundColor) {\n    e.currentTarget.style.backgroundColor = null;\n    e.currentTarget.style.color = null;\n    //alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: false};}return obj;});\n    //window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  } else {\n    e.currentTarget.style.backgroundColor = 'green';\n    e.currentTarget.style.color = 'white';\n    //alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: true};}return obj;});\n   //window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  }\n  };\n  \n  let ListItems = Readtasks.map((todo) => {\n    return(\n        <div key ={todo.id} >\n          <p>Task Name: {todo.task}</p>\n          <button className=\"done btn_class\"  onClick={(e) => doneTodo(e,todo.id)}>Done </button>\n          <button className='delete' onClick={() => deleteTodo(todo.id)}>Delete</button>\n          <p>Assignee: {todo.assignee}</p>\n        </div>\n    )\n });\n    \n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"task name\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"assignee\" />\n            <button className=\"b_add\" onClick={savedata} >Add Task</button>\n                </label>\n            </form>\n          <hr/>\n          <div className=\"search\">\n        <input\n          type=\"text\"\n          value={searchText}\n          id=\"search\" placeholder=\" Search\"\n          onChange={({ target }) => setSearchText(target.value)}\n        />\n          <div className=\"my-tasks\">\n          {ListItems}\n          </div></div>\n          <footer className=\"counts\" id=\"counts\">\n        <p id=\"TD_count\">To-Do:{alltasks.length}</p>\n        <p id=\"D_count\">Done:{alltasks.filter(value => value.done === true).length}</p>\n        </footer>\n        </div> \n      );}\nexport default App;\n/*import React, { useState, useEffect } from \"react\";\n\nexport default function App() {\n  const[assignee,setAssignee] = useState('')\n  const [task, setTask] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  useEffect(()=>{\n      if(localStorage.getItem(\"todos\")){\n          const storedList = JSON.parse(localStorage.getItem(\"todos\"));\n          setTodos(storedList);\n      }\n  },[])\n\n  const addTask = (e) => {\n    if (task && assignee ) {\n      const newTask ={\n        id: Math.random() , \n        task : task,\n        assignee:assignee , \n        done:false };\n      setTodos([...todos, newTask]);\n      localStorage.setItem(\"todos\", JSON.stringify([...todos, newTask]));\n      setTask(\"\");\n      setAssignee(\"\");\n    }\n  };\n\n  const handleDelete = (task)=>{\n      const deleted = todos.filter((t)=>t.id !== task.id);\n      setTodos(deleted);\n      localStorage.setItem(\"todos\", JSON.stringify(deleted))\n  }\n\n  /*const handleClear=()=>{\n      setTasks([]);\n      localStorage.removeItem(\"localTasks\");\n  }\n  return (\n    <div className=\"container row\">\n      <h1 className=\"mt-3 text-white\">To-Do App</h1>\n      <div className=\"col-8\">\n        <input\n          name=\"task\"\n          type=\"text\"\n          value={task}\n          placeholder=\"Write your task...\"\n          className=\"form-control\"\n          onChange={(e) => setTask(e.target.value)}\n        />\n      </div>\n      <div className=\"col-4\">\n        <button\n          className=\"btn btn-primary form-control material-icons\"\n          onClick={addTask}\n        >\n          add\n        </button>\n      </div>\n      <div className=\"badge\">\n        You have\n        {!tasks.length\n          ? \" no tasks\"\n          : tasks.length === 1\n          ? \" 1 task\"\n          : tasks.length > 1\n          ? ` ${tasks.length} tasks`\n          : null}\n      </div>\n      {tasks.map((task) => (\n        <React.Fragment key={task.id}>\n            <div className=\"col-11\">\n                <span className = \"form-control bg-white btn mt-2\"\n                style={{textAlign: \"left\", fontWeight: \"bold\"}}>\n                    {task.title}\n                </span>\n            </div>\n\n            <div className=\"col-1\">\n                <button\n                className =\" mt-2 btn btn-warning material-icons\"\n                onClick ={()=> handleDelete(task)}\n                >delete</button>\n            </div>\n        </React.Fragment>\n      ))}\n      {!tasks.length ? null:(\n          <div>\n              <button className= \"btn btn-secondary  mt-4 mb-4\" onClick={()=>handleClear()}>\n                  Clear\n              </button>\n          </div>\n      )}\n    </div>\n  );\n}*/"],"mappings},"metadata":{},"sourceType":"module"}