{"ast":null,"code":"/*import React , {useState , useRef} from 'react';\nimport Search from './Search';\nimport End from './End';\n//import {ButtonComponent} from '@syncfusion/ej2-react-buttons';\n\n import './index.css';\n\n function App (props)\n {\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  \n  let alltasks = JSON.parse(localStorage.getItem('tasks')||\"[]\")\n  const deleteTodo = (id) => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n       // Filter out todo with the id\n       alltasks = alltasks.filter((todo) => todo.id !== id);\n       localStorage.setItem('tasks',JSON.stringify(alltasks));\n\n    }\n\n  };\n  const doneTodo = (id) => \n  {\n   \n\n                        //Modify elements\n                        alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: true};}return obj;});\n                        localStorage.setItem(\"tasks\", (JSON.stringify(alltasks)));\n                    \n  };\n\n  let ListItems=alltasks.map((d) => {\n    return(\n        <div key ={d.task} >\n          <p>{d.task}</p>\n          <button className=\"done\" onClick={() => doneTodo(d.id)}>&times; </button>\n          <button className='delete' onClick={() => deleteTodo(d.id)}>&times;</button>\n          <p>{d.assignee}</p>\n        </div>\n    )\n });\n  const savedata = () => {\n    let mytask = {\n      id: Math.random(),\n      task : task,\n      assignee : assignee ,\n      done : false\n    }\n    alltasks.push(mytask)\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n      };\n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"text\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"text\" />\n            <button id=\"AddB\" className=\"b_add\" onClick={savedata} >Add Task</button>\n            \n                </label>\n            </form>\n          <hr/>\n          <Search />\n          <section className=\"my-tasks\">\n          {alltasks.map((todo) => (\n          <div key={todo.id}>\n            <p>{todo.todo1}</p>\n            <p>{todo.todo2}</p>\n            <button onClick={() => deleteTodo(todo.id)}>&times;</button>\n          </div>\n        ))}\n          </section>\n          <End />\n          \n        </div> \n      );}\n      \nexport default App;*/\n/*import React, { useState } from \"react\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  let alltasks = JSON.parse(localStorage.getItem('tasks')||\"[]\")\n\n\n  const addTodo = (todo1,todo2) => {\n    const newTodo = {\n      id: Math.random(),\n      todo1: todo1,\n      todo2: todo2,\n      done:false\n    };\n\n    // add the todo to the list\n    alltasks.push(newTodo);\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n\n    // clear input box\n    setInput(\"\");\n    setInput2(\"\");\n  };\n\n  const deleteTodo = (id) => {\n    // Filter out todo with the id\n    alltasks = alltasks.filter((todo) => todo.id !== id);\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        value={input2}\n        onChange={(e) => setInput2(e.target.value)}\n      />\n      <button onClick={() => addTodo(input,input2)}>Add</button>\n      <section className=\"my-tasks\">\n      <div>\n        {alltasks.map((todo) => (\n          <div key={todo.id}>\n            <p>{todo.todo1}</p>\n            <p>{todo.todo2}</p>\n            <button onClick={() => deleteTodo(todo.id)}>&times;</button>\n          </div>\n        ))}\n      </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;*/","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/React1/to-do/src/App.js"],"sourcesContent":["/*import React , {useState , useRef} from 'react';\nimport Search from './Search';\nimport End from './End';\n//import {ButtonComponent} from '@syncfusion/ej2-react-buttons';\n\n import './index.css';\n\n function App (props)\n {\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  \n  let alltasks = JSON.parse(localStorage.getItem('tasks')||\"[]\")\n  const deleteTodo = (id) => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n       // Filter out todo with the id\n       alltasks = alltasks.filter((todo) => todo.id !== id);\n       localStorage.setItem('tasks',JSON.stringify(alltasks));\n\n    }\n\n  };\n  const doneTodo = (id) => \n  {\n   \n\n                        //Modify elements\n                        alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: true};}return obj;});\n                        localStorage.setItem(\"tasks\", (JSON.stringify(alltasks)));\n                    \n  };\n\n  let ListItems=alltasks.map((d) => {\n    return(\n        <div key ={d.task} >\n          <p>{d.task}</p>\n          <button className=\"done\" onClick={() => doneTodo(d.id)}>&times; </button>\n          <button className='delete' onClick={() => deleteTodo(d.id)}>&times;</button>\n          <p>{d.assignee}</p>\n        </div>\n    )\n });\n  const savedata = () => {\n    let mytask = {\n      id: Math.random(),\n      task : task,\n      assignee : assignee ,\n      done : false\n    }\n    alltasks.push(mytask)\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n      };\n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"text\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"text\" />\n            <button id=\"AddB\" className=\"b_add\" onClick={savedata} >Add Task</button>\n            \n                </label>\n            </form>\n          <hr/>\n          <Search />\n          <section className=\"my-tasks\">\n          {alltasks.map((todo) => (\n          <div key={todo.id}>\n            <p>{todo.todo1}</p>\n            <p>{todo.todo2}</p>\n            <button onClick={() => deleteTodo(todo.id)}>&times;</button>\n          </div>\n        ))}\n          </section>\n          <End />\n          \n        </div> \n      );}\n      \nexport default App;*/\n/*import React, { useState } from \"react\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  let alltasks = JSON.parse(localStorage.getItem('tasks')||\"[]\")\n\n\n  const addTodo = (todo1,todo2) => {\n    const newTodo = {\n      id: Math.random(),\n      todo1: todo1,\n      todo2: todo2,\n      done:false\n    };\n\n    // add the todo to the list\n    alltasks.push(newTodo);\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n\n    // clear input box\n    setInput(\"\");\n    setInput2(\"\");\n  };\n\n  const deleteTodo = (id) => {\n    // Filter out todo with the id\n    alltasks = alltasks.filter((todo) => todo.id !== id);\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        value={input2}\n        onChange={(e) => setInput2(e.target.value)}\n      />\n      <button onClick={() => addTodo(input,input2)}>Add</button>\n      <section className=\"my-tasks\">\n      <div>\n        {alltasks.map((todo) => (\n          <div key={todo.id}>\n            <p>{todo.todo1}</p>\n            <p>{todo.todo2}</p>\n            <button onClick={() => deleteTodo(todo.id)}>&times;</button>\n          </div>\n        ))}\n      </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;*/"],"mappings},"metadata":{},"sourceType":"module"}