{"ast":null,"code":"/*import React , {useState , useRef} from 'react';\nimport Search from './Search';\nimport End from './End';\n//import {ButtonComponent} from '@syncfusion/ej2-react-buttons';\n\n import './index.css';\n\n function App (props)\n {\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  const ele1 = useRef();\n  const ele2 = useRef();\n  \n  let alltasks = JSON.parse(localStorage.getItem('tasks')||\"[]\")\n  const deletee = (e) => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n      \n      alert()\n      alltasks = alltasks.filter((e) => e.task !== ele1.value);\n      alltasks = alltasks.filter((e) => e.assignee !== ele2.value);\n      localStorage.setItem(\"tasks\", JSON.stringify(alltasks));\n    }\n\n  };\n  const donee = () => \n  {\n    alert();\n\n  };\n\n  let ListItems=alltasks.map((d) => {\n    return(\n        <div key ={d.task} >\n          <p value={d.task} onChange={(e)=>(settask(e.target.value))}>{d.task}</p>\n          <button className=\"done\"onClick={donee} >done </button>\n          <button className='delete' onClick={(e) =>(deletee(e))}>Delete</button>\n          <p value={d.assignee}>{d.assignee}</p>\n        </div>\n    )\n });\n  \n  const savedata = () => {\n    let mytask = {\n      task : task,\n      assignee : assignee ,\n      done : false\n    }\n    alltasks.push(mytask)\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n      }\n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"text\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"text\" />\n            <button id=\"AddB\" className=\"b_add\" onClick={savedata} >Add Task</button>\n            \n                </label>\n            </form>\n          <hr/>\n          <Search />\n          <section className=\"my-tasks\">{ListItems}</section>\n          <End />\n          \n        </div> \n      );}\n      \nexport default App;\n/*import React, { useState } from \"react\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const addTodo = (todo) => {\n    const newTodo = {\n      id: Math.random(),\n      todo: todo,\n    };\n\n    // add the todo to the list\n    setList([...list, newTodo]);\n\n    // clear input box\n    setInput(\"\");\n  };\n\n  const deleteTodo = (id) => {\n    // Filter out todo with the id\n    const newList = list.filter((todo) => todo.id !== id);\n\n    setList(newList);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <button onClick={() => addTodo(input)}>Add</button>\n      <section className=\"my-tasks\">\n      <div>\n        {list.map((todo) => (\n          <p key={todo.id}>\n            {todo.todo}\n            <button onClick={() => deleteTodo(todo.id)}>&times;</button>\n          </p>\n        ))}\n      </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;*/","map":{"version":3,"names":[],"sources":["C:/Users/User/Desktop/React1/to-do/src/App.js"],"sourcesContent":["/*import React , {useState , useRef} from 'react';\nimport Search from './Search';\nimport End from './End';\n//import {ButtonComponent} from '@syncfusion/ej2-react-buttons';\n\n import './index.css';\n\n function App (props)\n {\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  const ele1 = useRef();\n  const ele2 = useRef();\n  \n  let alltasks = JSON.parse(localStorage.getItem('tasks')||\"[]\")\n  const deletee = (e) => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n      \n      alert()\n      alltasks = alltasks.filter((e) => e.task !== ele1.value);\n      alltasks = alltasks.filter((e) => e.assignee !== ele2.value);\n      localStorage.setItem(\"tasks\", JSON.stringify(alltasks));\n    }\n\n  };\n  const donee = () => \n  {\n    alert();\n\n  };\n\n  let ListItems=alltasks.map((d) => {\n    return(\n        <div key ={d.task} >\n          <p value={d.task} onChange={(e)=>(settask(e.target.value))}>{d.task}</p>\n          <button className=\"done\"onClick={donee} >done </button>\n          <button className='delete' onClick={(e) =>(deletee(e))}>Delete</button>\n          <p value={d.assignee}>{d.assignee}</p>\n        </div>\n    )\n });\n  \n  const savedata = () => {\n    let mytask = {\n      task : task,\n      assignee : assignee ,\n      done : false\n    }\n    alltasks.push(mytask)\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n      }\n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"text\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"text\" />\n            <button id=\"AddB\" className=\"b_add\" onClick={savedata} >Add Task</button>\n            \n                </label>\n            </form>\n          <hr/>\n          <Search />\n          <section className=\"my-tasks\">{ListItems}</section>\n          <End />\n          \n        </div> \n      );}\n      \nexport default App;\n/*import React, { useState } from \"react\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const addTodo = (todo) => {\n    const newTodo = {\n      id: Math.random(),\n      todo: todo,\n    };\n\n    // add the todo to the list\n    setList([...list, newTodo]);\n\n    // clear input box\n    setInput(\"\");\n  };\n\n  const deleteTodo = (id) => {\n    // Filter out todo with the id\n    const newList = list.filter((todo) => todo.id !== id);\n\n    setList(newList);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <button onClick={() => addTodo(input)}>Add</button>\n      <section className=\"my-tasks\">\n      <div>\n        {list.map((todo) => (\n          <p key={todo.id}>\n            {todo.todo}\n            <button onClick={() => deleteTodo(todo.id)}>&times;</button>\n          </p>\n        ))}\n      </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;*/"],"mappings},"metadata":{},"sourceType":"module"}