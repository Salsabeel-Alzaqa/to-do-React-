{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React1\\\\to-do\\\\src\\\\App.js\";\n/*import React , {useState , useEffect}from 'react';\nimport './index.css';\n function App ()\n {\n  const [alltasks, setalltasks] = useState([]);\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  const savedata = () => {\n      let newtask = {\n    id: Math.random(),\n    task : task,\n    assignee : assignee ,\n    done : false\n  }\n  setalltasks([...alltasks, newtask]);\n  settask(\"\");\n  setassignee(\"\");\n    };\n  \n  \n   \n////search\n    const [searchText, setSearchText] = useState(\"\");\n    const Readtasks = alltasks.filter(\n        ({ task, assignee }) =>\n          task.toLowerCase().includes(searchText.toLowerCase()) ||\n          assignee.toLowerCase().includes(searchText.toLowerCase())\n      );\n      const deleteTodo = id => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n       let newtasks = alltasks.filter((todo) => todo.id !== id);\n       setalltasks([...newtasks]);\n    }\n  };\n  const doneTodo = (e,id )=> {\n  if (e.currentTarget.style.backgroundColor) {\n    e.currentTarget.style.backgroundColor = null;\n    e.currentTarget.style.color = null;\n    //alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: false};}return obj;});\n    //window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  } else {\n    e.currentTarget.style.backgroundColor = 'green';\n    e.currentTarget.style.color = 'white';\n    //alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: true};}return obj;});\n   //window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  }\n  };\n  \n  let ListItems = Readtasks.map((todo) => {\n    return(\n        <div key ={todo.id} >\n          <p>Task Name: {todo.task}</p>\n          <button className=\"done btn_class\"  onClick={(e) => doneTodo(e,todo.id)}>Done </button>\n          <button className='delete' onClick={() => deleteTodo(todo.id)}>Delete</button>\n          <p>Assignee: {todo.assignee}</p>\n        </div>\n    )\n });\n    \n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"task name\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"assignee\" />\n            <button className=\"b_add\" onClick={savedata} >Add Task</button>\n                </label>\n            </form>\n          <hr/>\n          <div className=\"search\">\n        <input\n          type=\"text\"\n          value={searchText}\n          id=\"search\" placeholder=\" Search\"\n          onChange={({ target }) => setSearchText(target.value)}\n        />\n          <div className=\"my-tasks\">\n          {ListItems}\n          </div></div>\n          <footer className=\"counts\" id=\"counts\">\n        <p id=\"TD_count\">To-Do:{alltasks.length}</p>\n        <p id=\"D_count\">Done:{alltasks.filter(value => value.done === true).length}</p>\n        </footer>\n        </div> \n      );}\nexport default App;*/\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const handleDelete = task => {\n    const deleted = todos.filter(t => t.id !== task.id);\n    setTodos(deleted);\n    localStorage.setItem(\"todos\", JSON.stringify(deleted));\n  };\n\n  /*const handleClear=()=>{\n      setTasks([]);\n      localStorage.removeItem(\"localTasks\");\n  }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-3 text-white\",\n      children: \"To-Do App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-8\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"task\",\n        type: \"text\",\n        value: task,\n        placeholder: \"Write your task...\",\n        className: \"form-control\",\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary form-control material-icons\",\n        onClick: addTask,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"badge\",\n      children: [\"You have\", !tasks.length ? \" no tasks\" : tasks.length === 1 ? \" 1 task\" : tasks.length > 1 ? ` ${tasks.length} tasks` : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-11\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-control bg-white btn mt-2\",\n          style: {\n            textAlign: \"left\",\n            fontWeight: \"bold\"\n          },\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \" mt-2 btn btn-warning material-icons\",\n          onClick: () => handleDelete(task),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)), !tasks.length ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary  mt-4 mb-4\",\n        onClick: () => handleClear(),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","handleDelete","task","deleted","todos","filter","t","id","setTodos","localStorage","setItem","JSON","stringify","e","setTask","target","value","addTask","tasks","length","map","textAlign","fontWeight","title","handleClear"],"sources":["C:/Users/User/Desktop/React1/to-do/src/App.js"],"sourcesContent":["/*import React , {useState , useEffect}from 'react';\nimport './index.css';\n function App ()\n {\n  const [alltasks, setalltasks] = useState([]);\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  const savedata = () => {\n      let newtask = {\n    id: Math.random(),\n    task : task,\n    assignee : assignee ,\n    done : false\n  }\n  setalltasks([...alltasks, newtask]);\n  settask(\"\");\n  setassignee(\"\");\n    };\n  \n  \n   \n////search\n    const [searchText, setSearchText] = useState(\"\");\n    const Readtasks = alltasks.filter(\n        ({ task, assignee }) =>\n          task.toLowerCase().includes(searchText.toLowerCase()) ||\n          assignee.toLowerCase().includes(searchText.toLowerCase())\n      );\n      const deleteTodo = id => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n       let newtasks = alltasks.filter((todo) => todo.id !== id);\n       setalltasks([...newtasks]);\n    }\n  };\n  const doneTodo = (e,id )=> {\n  if (e.currentTarget.style.backgroundColor) {\n    e.currentTarget.style.backgroundColor = null;\n    e.currentTarget.style.color = null;\n    //alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: false};}return obj;});\n    //window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  } else {\n    e.currentTarget.style.backgroundColor = 'green';\n    e.currentTarget.style.color = 'white';\n    //alltasks=alltasks.map(obj =>{if (obj.id === id ) {return {...obj, done: true};}return obj;});\n   //window.localStorage.setItem(\"tasks\", (JSON.stringify(alltasks))); \n  }\n  };\n  \n  let ListItems = Readtasks.map((todo) => {\n    return(\n        <div key ={todo.id} >\n          <p>Task Name: {todo.task}</p>\n          <button className=\"done btn_class\"  onClick={(e) => doneTodo(e,todo.id)}>Done </button>\n          <button className='delete' onClick={() => deleteTodo(todo.id)}>Delete</button>\n          <p>Assignee: {todo.assignee}</p>\n        </div>\n    )\n });\n    \n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"task name\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"assignee\" />\n            <button className=\"b_add\" onClick={savedata} >Add Task</button>\n                </label>\n            </form>\n          <hr/>\n          <div className=\"search\">\n        <input\n          type=\"text\"\n          value={searchText}\n          id=\"search\" placeholder=\" Search\"\n          onChange={({ target }) => setSearchText(target.value)}\n        />\n          <div className=\"my-tasks\">\n          {ListItems}\n          </div></div>\n          <footer className=\"counts\" id=\"counts\">\n        <p id=\"TD_count\">To-Do:{alltasks.length}</p>\n        <p id=\"D_count\">Done:{alltasks.filter(value => value.done === true).length}</p>\n        </footer>\n        </div> \n      );}\nexport default App;*/\nimport React, { useState, useEffect } from \"react\";\n\nexport default function App() {\n\n  const handleDelete = (task)=>{\n      const deleted = todos.filter((t)=>t.id !== task.id);\n      setTodos(deleted);\n      localStorage.setItem(\"todos\", JSON.stringify(deleted))\n  }\n\n  /*const handleClear=()=>{\n      setTasks([]);\n      localStorage.removeItem(\"localTasks\");\n  }*/\n  return (\n    <div className=\"container row\">\n      <h1 className=\"mt-3 text-white\">To-Do App</h1>\n      <div className=\"col-8\">\n        <input\n          name=\"task\"\n          type=\"text\"\n          value={task}\n          placeholder=\"Write your task...\"\n          className=\"form-control\"\n          onChange={(e) => setTask(e.target.value)}\n        />\n      </div>\n      <div className=\"col-4\">\n        <button\n          className=\"btn btn-primary form-control material-icons\"\n          onClick={addTask}\n        >\n          add\n        </button>\n      </div>\n      <div className=\"badge\">\n        You have\n        {!tasks.length\n          ? \" no tasks\"\n          : tasks.length === 1\n          ? \" 1 task\"\n          : tasks.length > 1\n          ? ` ${tasks.length} tasks`\n          : null}\n      </div>\n      {tasks.map((task) => (\n        <React.Fragment key={task.id}>\n            <div className=\"col-11\">\n                <span className = \"form-control bg-white btn mt-2\"\n                style={{textAlign: \"left\", fontWeight: \"bold\"}}>\n                    {task.title}\n                </span>\n            </div>\n\n            <div className=\"col-1\">\n                <button\n                className =\" mt-2 btn btn-warning material-icons\"\n                onClick ={()=> handleDelete(task)}\n                >delete</button>\n            </div>\n        </React.Fragment>\n      ))}\n      {!tasks.length ? null:(\n          <div>\n              <button className= \"btn btn-secondary  mt-4 mb-4\" onClick={()=>handleClear()}>\n                  Clear\n              </button>\n          </div>\n      )}\n    </div>\n  );\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,eAAe,SAASC,GAAG,GAAG;EAE5B,MAAMC,YAAY,GAAIC,IAAI,IAAG;IACzB,MAAMC,OAAO,GAAGC,KAAK,CAACC,MAAM,CAAEC,CAAC,IAAGA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;IACnDC,QAAQ,CAACL,OAAO,CAAC;IACjBM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC,CAAC;EAC1D,CAAC;;EAED;AACF;AACA;AACA;EACE,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAI,SAAS,EAAC,iBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eAC9C;MAAK,SAAS,EAAC,OAAO;MAAA,uBACpB;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,MAAM;QACX,KAAK,EAAED,IAAK;QACZ,WAAW,EAAC,oBAAoB;QAChC,SAAS,EAAC,cAAc;QACxB,QAAQ,EAAGW,CAAC,IAAKC,OAAO,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IACzC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,uBACpB;QACE,SAAS,EAAC,6CAA6C;QACvD,OAAO,EAAEC,OAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAGV;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,uBAEnB,CAACC,KAAK,CAACC,MAAM,GACV,WAAW,GACXD,KAAK,CAACC,MAAM,KAAK,CAAC,GAClB,SAAS,GACTD,KAAK,CAACC,MAAM,GAAG,CAAC,GACf,IAAGD,KAAK,CAACC,MAAO,QAAO,GACxB,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,EACLD,KAAK,CAACE,GAAG,CAAElB,IAAI,iBACd,QAAC,KAAK,CAAC,QAAQ;MAAA,wBACX;QAAK,SAAS,EAAC,QAAQ;QAAA,uBACnB;UAAM,SAAS,EAAG,gCAAgC;UAClD,KAAK,EAAE;YAACmB,SAAS,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAM,CAAE;UAAA,UAC1CpB,IAAI,CAACqB;QAAK;UAAA;UAAA;UAAA;QAAA;MACR;QAAA;QAAA;QAAA;MAAA,QACL,eAEN;QAAK,SAAS,EAAC,OAAO;QAAA,uBAClB;UACA,SAAS,EAAE,sCAAsC;UACjD,OAAO,EAAG,MAAKtB,YAAY,CAACC,IAAI,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAClB;QAAA;QAAA;QAAA;MAAA,QACd;IAAA,GAbWA,IAAI,CAACK,EAAE;MAAA;MAAA;MAAA;IAAA,QAe7B,CAAC,EACD,CAACW,KAAK,CAACC,MAAM,GAAG,IAAI,gBACjB;MAAA,uBACI;QAAQ,SAAS,EAAE,8BAA8B;QAAC,OAAO,EAAE,MAAIK,WAAW,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAEpE;MAAA;MAAA;MAAA;IAAA,QAEhB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,KArEuBxB,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}