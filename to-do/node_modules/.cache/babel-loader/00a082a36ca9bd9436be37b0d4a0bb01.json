{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React1\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import React , {useState , useRef} from 'react';\nimport Search from './Search';\nimport End from './End';\n//import {ButtonComponent} from '@syncfusion/ej2-react-buttons';\n\n import './index.css';\n\n function App (props)\n {\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  const ele1 = useRef();\n  const ele2 = useRef();\n  \n  let alltasks = JSON.parse(localStorage.getItem('tasks')||\"[]\")\n  const deletee = (e) => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n      \n    }\n\n  };\n  const donee = () => \n  {\n    alert();\n\n  };\n\n  let ListItems=alltasks.map((d) => {\n    return(\n        <div key ={d.task} >\n          <p>{d.task}</p>\n          <button className=\"done\"onClick={donee} >done </button>\n          <button className='delete' onClick={(e) =>(deletee(e))}>Delete</button>\n          <p>{d.assignee}</p>\n        </div>\n    )\n });\n  \n  const savedata = () => {\n    let mytask = {\n      task : task,\n      assignee : assignee ,\n      done : false\n    }\n    alltasks.push(mytask)\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n      }\n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"text\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"text\" />\n            <button id=\"AddB\" className=\"b_add\" onClick={savedata} >Add Task</button>\n            \n                </label>\n            </form>\n          <hr/>\n          <Search />\n          <section className=\"my-tasks\">{ListItems}</section>\n          <End />\n          \n        </div> \n      );}\n      \nexport default App;*/\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  let alltasks = JSON.parse(localStorage.getItem('tasks') || \"[]\");\n  const addTodo = (todo1, todo2) => {\n    const newTodo = {\n      id: Math.random(),\n      todo1: todo1,\n      todo2: todo2,\n      done: false\n    };\n\n    // add the todo to the list\n    setList([...list, newTodo]);\n    alltasks.push(newTodo);\n    localStorage.setItem('tasks', JSON.stringify(alltasks));\n\n    // clear input box\n    setInput(\"\");\n    setInput2(\"\");\n  };\n  const deleteTodo = id => {\n    // Filter out todo with the id\n    const newList = list.filter(todo => todo.id !== id);\n    setList(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input2,\n      onChange: e => setInput2(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTodo(input, input2),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"my-tasks\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: list.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.todo1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.todo2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTodo(todo.id),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZWkL7+FHuwTKqpzXPmzakeJG5Sc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","list","setList","input","setInput","input2","setInput2","alltasks","JSON","parse","localStorage","getItem","addTodo","todo1","todo2","newTodo","id","Math","random","done","push","setItem","stringify","deleteTodo","newList","filter","todo","e","target","value","map"],"sources":["C:/Users/User/Desktop/React1/to-do/src/App.js"],"sourcesContent":["/*import React , {useState , useRef} from 'react';\nimport Search from './Search';\nimport End from './End';\n//import {ButtonComponent} from '@syncfusion/ej2-react-buttons';\n\n import './index.css';\n\n function App (props)\n {\n  const[task,settask] = useState('')\n  const[assignee,setassignee] = useState('')\n  const ele1 = useRef();\n  const ele2 = useRef();\n  \n  let alltasks = JSON.parse(localStorage.getItem('tasks')||\"[]\")\n  const deletee = (e) => \n  {\n    let result = window.confirm(\"Are you sure to delete?\");\n    if(result)\n    {\n      \n    }\n\n  };\n  const donee = () => \n  {\n    alert();\n\n  };\n\n  let ListItems=alltasks.map((d) => {\n    return(\n        <div key ={d.task} >\n          <p>{d.task}</p>\n          <button className=\"done\"onClick={donee} >done </button>\n          <button className='delete' onClick={(e) =>(deletee(e))}>Delete</button>\n          <p>{d.assignee}</p>\n        </div>\n    )\n });\n  \n  const savedata = () => {\n    let mytask = {\n      task : task,\n      assignee : assignee ,\n      done : false\n    }\n    alltasks.push(mytask)\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n      }\n      return (\n        <div>\n          <form id=\"form\">\n            <label htmlFor=\"taskname\">Task Name: \n            <input  required name=\"taskname\" id=\"taskname\" value={task} onChange={(e)=>(settask(e.target.value))} type=\"text\" placeholder=\"text\" />\n                </label>\n                <label htmlFor=\"assignee\">Assignee : \n            <input  required name=\"assignee\" id=\"assignee\" value= {assignee} onChange={(e)=>(setassignee(e.target.value))} type=\"text\" placeholder=\"text\" />\n            <button id=\"AddB\" className=\"b_add\" onClick={savedata} >Add Task</button>\n            \n                </label>\n            </form>\n          <hr/>\n          <Search />\n          <section className=\"my-tasks\">{ListItems}</section>\n          <End />\n          \n        </div> \n      );}\n      \nexport default App;*/\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [input2, setInput2] = useState(\"\");\n  let alltasks = JSON.parse(localStorage.getItem('tasks')||\"[]\")\n\n\n  const addTodo = (todo1,todo2) => {\n    const newTodo = {\n      id: Math.random(),\n      todo1: todo1,\n      todo2: todo2,\n      done:false\n    };\n\n    // add the todo to the list\n    setList([...list, newTodo]);\n    alltasks.push(newTodo);\n    localStorage.setItem('tasks',JSON.stringify(alltasks))\n\n    // clear input box\n    setInput(\"\");\n    setInput2(\"\");\n  };\n\n  const deleteTodo = (id) => {\n    // Filter out todo with the id\n    const newList = list.filter((todo) => todo.id !== id);\n    \n    setList(newList);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        value={input2}\n        onChange={(e) => setInput2(e.target.value)}\n      />\n      <button onClick={() => addTodo(input,input2)}>Add</button>\n      <section className=\"my-tasks\">\n      <div>\n        {list.map((todo) => (\n          <div key={todo.id}>\n            <p>{todo.todo1}</p>\n            <p>{todo.todo2}</p>\n            <button onClick={() => deleteTodo(todo.id)}>&times;</button>\n          </div>\n        ))}\n      </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}